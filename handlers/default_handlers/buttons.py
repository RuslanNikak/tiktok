from loader import bot
from database import video
from keyboards.reply import button_users
from keyboards.inline import check_video
from keyboards.reply import button_adm
from states.users_states import MyStates


def check(video_1):
    capt = "–°—Ç–∞—Ç—É—Å –Ω–µ–∏–∑–≤–µ—Å—Ç–µ–Ω"
    if video_1 == 2:
        capt = "–ù–µ –ø—Ä–æ–≤–µ—Ä–µ–Ω–æ‚è≥"
    elif video_1 == 1:
        capt = "–û–¥–æ–±—Ä–µ–Ω–Ω–æ‚úÖ"
    elif video_1 == 0:
        capt = "–û—Ç–∫–∞–∑–∞–Ω–æ‚ùå"
    return capt


@bot.message_handler(content_types=["text"])
def button(message):
    text = [",jn", ">jn", "–±–æ—Ç"]
    if message.text == "–ú–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞":
        bot.send_message(
            message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ", reply_markup=button_users.statistik()
        )
    elif message.text == "–ú–æ–∏ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 5 –≤–∏–¥–µ–æ":
        videos = video.send_video_limit(message.from_user.id)
        for video_1 in videos:
            file_id = video_1[2]
            cap = check(video_1[3])
            bot.send_video(message.chat.id, file_id, caption=f"\n{cap}")
    elif message.text == "–í—Å–µ –≤–∏–¥–µ–æ":
        videos = video.send_video(message.from_user.id)
        for video_1 in videos:
            file_id = video_1[2]
            cap = check(video_1[3])
            bot.send_video(message.chat.id, file_id, caption=f"\n{cap}")
    elif message.text == "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤—Å–µ—Ö –≤–∏–¥–µ–æ":
        videos = video.send_video(message.from_user.id)
        all = 0
        good = 0
        bad = 0
        no_watch = 0
        for video_1 in videos:
            all += 1
            if video_1[3] == 2:
                no_watch += 1
            elif video_1[3] == 1:
                good += 1
            elif video_1[3] == 0:
                bad += 1
        if all == 0:
            mess = "–í—ã –µ—â–µ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–ª–∏ –≤–∏–¥–µ–æ"
        elif good == 0 and bad == 0:
            mess = "–ü–æ–¥–æ–∂–¥–∏—Ç–µ –ø–æ–∫–∞ –ø—Ä–æ–≤–µ—Ä—è—Ç –≤–∞—à–∏ –≤–∏–¥–µ–æ"
        elif good <= bad:
            mess = "–ü—Ä–∏—Å—ã–ª–∞–π—Ç–µ –±–æ–ª–µ–µ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–µ–µ –≤–∏–¥–µ–æ "
            "–∏–ª–∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –≤—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥—É—é —Ç–µ–º–∞—Ç–∏–∫—É –∞–Ω–∏–º–µ"
        elif good > bad:
            mess = "–°–ø–∞—Å–∏–±–æ —á—Ç–æ –ø—Ä–∏—Å—ã–ª–∞–µ—Ç–µ –Ω–∞–º –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç)"
        bot.send_message(
            message.chat.id,
            "–í—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–∞—à–∏—Ö –≤–∏–¥–µ–æ\n\n"
            f"üçÄ–í—Å–µ–≥–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤–∏–¥–µ–æ: {all}\n"
            f"‚úÖ–û–¥–æ–±—Ä–µ–Ω–æ: {good}\n"
            f"‚ùå–û—Ç–∫–∞–∑–∞–Ω–æ: {bad}\n"
            f"‚è≥–ù–µ –ø—Ä–æ–≤–µ—Ä–µ–Ω–æ: {no_watch}\n\n"
            f"{mess}",
        )
    elif message.text == "–ù–∞ –≥–ª–∞–≤–Ω—É—é":
        bot.send_message(
            message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ", reply_markup=button_users.users()
        )
        bot.delete_state(message.from_user.id, message.chat.id)
    elif message.text.lower() in text and message.chat.type == "group":
        bot.send_message(
            message.chat.id,
            "–í—ã–±–µ—Ä–∏—Ç–µ —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å",
            reply_markup=button_adm.adm(),
        )
    elif message.text == '777' and message.chat.type == "group":
        bot.set_state(message.from_user.id, MyStates.bot, message.chat.id)
        bot.send_message(
            message.chat.id,
            "–ú–æ–∂–µ—Ç–µ –ø–∏—Å–∞—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ\n–ß—Ç–æ–±—ã –≤—ã–π—Ç–∏ –Ω–∞–∂–º–∏—Ç–µ /stop",
        )
    elif message.text == "–ù–µ –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–µ –≤–∏–¥–µ–æ" and message.chat.type == "group":
        vid = video.no_watch()
        for row in vid:
            bot.send_video(-880322702, row[2], reply_markup=check_video.keyboard())
    elif message.text == "–°–≤—è–∑–∞—Ç—å—Å—è —Å –∞–¥–º–∏–Ω–∞–º–∏":
        bot.set_state(message.from_user.id, MyStates.user_id, message.chat.id)
        bot.send_message(
            message.chat.id,
            "–ù–∞–ø–∏—à–∏—Ç–µ —á—Ç–æ–±—ã —Å –≤–∞–º–∏ —Å–≤—è–∑–∞–ª–∏—Å—å\n" "–ß—Ç–æ–±—ã –≤—ã–π—Ç–∏ –Ω–∞–∂–º–∏—Ç–µ /stop",
        )
